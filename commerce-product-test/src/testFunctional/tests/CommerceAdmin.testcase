@component-name = "portal-commerce"
definition {

	property portal.upstream = "true";
	property testray.main.component.name = "Commerce";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		CommerceConfiguration.commerceAdminSetUp();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			CommerceConfiguration.commerceSettingsTearDown();

			CommerceConfiguration.commerceAdminTearDown();
		}
	}

	test CreateNewAvailabilityEstimate {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CommerceAdmin#CreateNewAvailabilityEstimate";

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Settings");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Availability Estimates");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewAvailabilityEstimatesEntry(entryName = "New Availability Estimate");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	test CreateNewCountry {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CommerceAdmin#CreateNewCountry";

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Settings");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Countries");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewCountriesEntry(entryName = "New Country");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");

		CommerceEntry.gotoMenuTab(menuTab = "Regions");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewRegionsEntry(
			code = "NRE",
			entryName = "New Region");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	test CreateNewCurrency {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CommerceAdmin#CreateNewCurrency";

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Settings");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Currencies");

		CommerceEntry.createNewCurrenciesEntry(
			code = "NCU",
			entryName = "New Currency");
	}

	test CreateNewDiscount {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CommerceAdmin#CreateNewDiscount";

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Discounts");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewDiscountsEntry(
			discountLevel = "15",
			discountTarget = "Apply to Product",
			entryTitle = "New Discount",
			maximumDiscountAmount = "10");

		Button.clickPublish();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	test CreateNewMeasurementUnits {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CommerceAdmin#CreateNewMeasurementUnits";

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Settings");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Measurement Units");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewDimensionUnit(entryName = "New Dimension Unit");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Weight");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewWeightUnit(entryName = "New Weight Unit");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	@ignore = "true"
	test CreateNewNotificationTemplate {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CommerceAdmin#CreateNewNotificationTemplate";

		CommerceEntry.createNewAccountGroup(
			criteriaType = "Users",
			criterionEntryName = "Commerce User",
			entryName = "Account groups");

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Site Administration",
			portlet = "Settings");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Notificatios");

		CommerceEntry.gotoMenuTab(menuTab = "Notification Templates");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewNotificationTemplate(
			accountGroup = "Account groups",
			entryName = "New Notification Template",
			fromAddress = "test@liferay.com",
			fromName = "Test Test",
			notificationType = "Order Placed");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	test CreateNewPriceList {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "CommerceAdmin#CreateNewPriceList";

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Settings");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Currencies");

		CommerceEntry.createNewCurrenciesEntry(
			code = "NCU",
			entryName = "New Currency");

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Price Lists");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewPriceListsEntry(
			currencyCode = "NCU",
			entryName = "New Price List");

		Button.clickPublish();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

}