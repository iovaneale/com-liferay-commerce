definition {

	macro commerceAdminSetUp {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "commerceuser@liferay.com",
			userFirstName = "Commerce",
			userLastName = "User",
			userScreenName = "commerceuser");

		CommerceEntry.createNewCurrenciesEntry(
			code = "NCU",
			entryName = "New Currency");

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Channels");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewChannelEntry(
			criteriaType = "Site",
			entryName = "Liferay",
			siteName = "Guest");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	macro commerceAdminTearDown {
		Navigator.openURL();

		key_rowEntry = "Commerce";

		CommerceConfiguration.commerceOrdersTearDown();

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		if (IsElementPresent(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME")) {
			User.deactivateCP(
				deactivateType = "Actions",
				userFirstName = "Commerce");

			User.deleteCP(userFirstName = "Commerce");
		}

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Accounts");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			Click(
				key_accountName = "${accountName}",
				locator1 = "CommerceEntry#ACCOUNT_ADMIN_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Delete");

			AssertConfirm.waitForConfirmation(value1 = "Are you sure you want to delete this? It will be deleted immediately.");
		}

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Account Groups");

		if (IsElementPresent(locator1 = "CommerceNavigation#SELECTABLE_CHECKBOX")) {
			CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete the selected account groups?");
		}

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Channels");

		if (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete the selected channels?");
		}

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Catalogs");

		if (IsElementPresent(locator1 = "CommerceNavigation#SELECTABLE_CHECKBOX")) {
			CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete the selected catalogs?");
		}

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Price Lists");

		if (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete the selected price lists?");
		}

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Discounts");

		if (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete the selected discounts?");
		}

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Settings");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Availability Estimates");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			CommerceProducts.deleteEntries(rowEntry = "New Availability Estimate");
		}

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Countries");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			CommerceProducts.deleteEntries(rowEntry = "New Country");
		}

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Currencies");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			CommerceProducts.deleteEntries(rowEntry = "US Dollar");
		}

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Measurement Units");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Delete");

			AssertConfirm.waitForConfirmation(value1 = "Are you sure you want to delete this? It will be deleted immediately.");
		}

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Weight");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Delete");

			AssertConfirm.waitForConfirmation(value1 = "Are you sure you want to delete this? It will be deleted immediately.");
		}

		CommerceConfiguration.commerceWarehousesTearDown();
	}

	macro commerceFrontStoreSetUp {
		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Site Administration",
			portlet = "Settings");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Health Check");

		for (var buttonRowNumber : list "1,2,3,4,5") {
			if (!(IsElementPresent(locator1 = "CommerceEntry#FIX_ISSUE_BUTTON", key_buttonStatus = "disabled"))) {
				Click(
					key_buttonRowNumber = "${buttonRowNumber}",
					key_buttonStatus = "",
					locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");
			}
		}

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Settings");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Health Check");

		for (var buttonRowNumber : list "1,2,3,4") {
			if (!(IsElementPresent(locator1 = "CommerceEntry#FIX_ISSUE_BUTTON", key_buttonStatus = "disabled"))) {
				Click(
					key_buttonRowNumber = "${buttonRowNumber}",
					key_buttonStatus = "",
					locator1 = "CommerceEntry#FIX_ISSUE_BUTTON");
			}
		}

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Channels");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewChannelEntry(
			criteriaType = "Site",
			entryName = "Liferay",
			siteName = "Guest");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	macro commerceFrontStoreTearDown {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Products");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {

			CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete");

		}

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Options");

		Pause(locator1 = "3000");

		CommerceOptions.deleteOptionsEntries();

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Specifications");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete the selected specification labels?");
		}

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Specifications");
		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Specification Groups");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete the selected specification groups?");
		}

		User.logoutPG();
	}

	macro commerceOrdersTearDown {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Orders");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete the selected orders?");
		}

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Pending");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete the selected orders?");
		}

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Transmitted");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
			CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete the selected orders?");
		}
	}

	macro commerceWarehousesTearDown {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Settings");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Warehouses");

		while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {

			Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Delete");

			AssertConfirm.waitForConfirmation(value1 = "Are you sure you want to delete this? It will be deleted immediately.");
		}
	}

}